name: Build and Push SillyTavern Image

# Allow manual triggering from the Actions tab
on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'The SillyTavern version tag for the Docker image (e.g., 1.11.0)'
        required: true
        type: string
      silly_branch:
        description: 'Which SillyTavern branch to build? (release=stable, staging=testing)'
        required: true
        type: choice
        options:
          - release # Stable branch
          - staging # Testing branch
        default: 'release'

# Permissions needed to push to GHCR
permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Use the latest available runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository code

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # User who triggered the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Automatic token, no secret needed

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Image name on GHCR: ghcr.io/YOUR_USERNAME_OR_ORG/sillytavern
          images: ghcr.io/${{ github.repository_owner }}/sillytavern
          tags: |
            # Tag with the specific version provided
            type=raw,value=${{ inputs.version_tag }}
            # Tag with the branch type (release or staging)
            type=raw,value=${{ inputs.silly_branch }}
            # Tag as 'latest' ONLY if building the 'release' branch
            type=raw,value=latest,enable=${{ inputs.silly_branch == 'release' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as build context
          file: ./Dockerfile # Explicitly point to your Dockerfile
          push: true # Push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by metadata action
          # Pass the chosen SillyTavern branch as a build argument to the Dockerfile
          build-args: |
            SILLY_BRANCH=${{ inputs.silly_branch }}
          # Enable build cache for faster builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
